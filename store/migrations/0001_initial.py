# Generated by Django 5.0.6 on 2024-07-26 14:39

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarousalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Carousal Image', max_length=255)),
                ('carousal_image', models.ImageField(upload_to='carousal_images', verbose_name='Carousal Image')),
                ('uploaded_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Uploaded Time')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Category Title')),
                ('slug', models.SlugField(max_length=55, verbose_name='Category Slug')),
                ('description', models.TextField(blank=True, verbose_name='Category Description')),
                ('category_image', models.ImageField(blank=True, null=True, upload_to='category', verbose_name='Category Image')),
                ('is_active', models.BooleanField(default=0, verbose_name='Is Active?')),
                ('is_featured', models.BooleanField(default=0, verbose_name='Is Featured?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Special Image', max_length=255)),
                ('special_image', models.ImageField(upload_to='special_images', verbose_name='Special Image')),
                ('uploaded_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Uploaded Time')),
            ],
        ),
        migrations.CreateModel(
            name='TodaysRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metal', models.CharField(choices=[('gold', 'Gold'), ('silver', 'Silver'), ('diamond', 'Diamond')], max_length=10, verbose_name='Metal')),
                ('karat', models.PositiveIntegerField(blank=True, choices=[(18, '18 KT'), (22, '22 KT'), (24, '24 KT')], null=True, verbose_name='Karat')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Rate')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
            ],
            options={
                'verbose_name': "Today's Rate",
                'verbose_name_plural': "Today's Rates",
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locality', models.CharField(max_length=150, verbose_name='Nearest Location')),
                ('city', models.CharField(max_length=150, verbose_name='City')),
                ('state', models.CharField(max_length=150, verbose_name='State')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='DiamondProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Product Title')),
                ('slug', models.SlugField(max_length=160, verbose_name='Product Slug')),
                ('sku', models.CharField(max_length=255, unique=True, verbose_name='Unique Product ID (SKU)')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('diamond_ornament_type', models.CharField(choices=[('diamond_bangles', 'Diamond Bangles'), ('diamond_bracelets', 'Diamond Bracelets'), ('diamond_chains', 'Diamond Chains'), ('diamond_ear_rings', 'Diamond Ear Rings'), ('diamond_necklaces', 'Diamond Necklaces'), ('diamond_nose_pins', 'Diamond Nose Pins'), ('diamond_pendants', 'Diamond Pendants'), ('diamond_rings', 'Diamond Rings'), ('diamond_special_items', 'Diamond Special Items')], max_length=150, verbose_name='Diamond Ornament Type')),
                ('diamond_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Diamond Quantity')),
                ('diamond_color', models.CharField(default='Type your color', max_length=50, verbose_name='Diamond Color')),
                ('diamond_quality', models.CharField(blank=True, choices=[('VVS', 'VVS'), ('1VVS 2', '1VVS 2'), ('SI', 'SI')], max_length=150, null=True, verbose_name='Diamond Quality')),
                ('carats', models.DecimalField(decimal_places=5, default=0, max_digits=8, verbose_name='Carats (Ct)')),
                ('diamond_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Diamond Price')),
                ('karatage', models.PositiveIntegerField(blank=True, choices=[(18, '18 KT'), (22, '22 KT')], null=True, verbose_name='Gold Karatage')),
                ('gold', models.CharField(choices=[('na', 'N/A'), ('rose_gold', 'Rose Gold'), ('yellow_gold', 'Yellow Gold'), ('white_gold', 'White Gold')], max_length=150, verbose_name='Gold Color')),
                ('weight', models.DecimalField(decimal_places=5, default=0, max_digits=8, verbose_name='Gold Weight (grams)')),
                ('gross_weight', models.DecimalField(decimal_places=5, default=0, max_digits=8, null=True, verbose_name='Gross Weight (grams)')),
                ('making_charges', models.DecimalField(decimal_places=2, default=1200, max_digits=8, verbose_name='Making Charges / gram')),
                ('gst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='GST Amount')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Price')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Amount')),
                ('is_active', models.BooleanField(verbose_name='Is Active?')),
                ('is_featured', models.BooleanField(verbose_name='Is Featured?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('discount', models.IntegerField(default=0, verbose_name='Discount (%)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.category', verbose_name='Product Category')),
                ('gold_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.todaysrate', verbose_name="Today's Rate")),
            ],
        ),
        migrations.CreateModel(
            name='GoldProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Product Title')),
                ('slug', models.SlugField(max_length=160, verbose_name='Product Slug')),
                ('sku', models.CharField(max_length=255, unique=True, verbose_name='Unique Product ID (SKU)')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('gold', models.CharField(choices=[('na', 'N/A'), ('rose_gold', 'Rose Gold'), ('yellow_gold', 'Yellow Gold'), ('white_gold', 'White Gold')], max_length=150, verbose_name='Gold Type')),
                ('gold_ornament_type', models.CharField(choices=[('na', 'N/A'), ('gold_anklets', 'Gold Anklets'), ('gold_baby_bangles', 'Gold Baby Bangles'), ('gold_bangles', 'Gold Bangles'), ('gold_bracelets', 'Gold Bracelets'), ('gold_chains', 'Gold Chains'), ('gold_ear_chains', 'Gold Ear Chains'), ('gold_ear_rings', 'Gold Ear Rings'), ('gold_ear_tops', 'Gold Ear Tops'), ('gold_hip_chains', 'Gold Hip Chains'), ('gold_necklaces', 'Gold Necklaces'), ('gold_nose_pins', 'Gold Nose Pins'), ('gold_pendants', 'Gold Pendants'), ('gold_rings', 'Gold Rings'), ('gold_special_items', 'Gold Special Items')], max_length=150, verbose_name='Gold Ornament Type')),
                ('karatage', models.PositiveIntegerField(blank=True, choices=[(18, '18 KT'), (22, '22 KT')], null=True, verbose_name='Karatage')),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Weight (in grams)')),
                ('making_charges', models.DecimalField(decimal_places=2, default=1200, max_digits=8, verbose_name='Making Charges / gram')),
                ('gst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='GST Amount')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Gold Price')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Amount')),
                ('is_active', models.BooleanField(verbose_name='Is Active?')),
                ('is_featured', models.BooleanField(verbose_name='Is Featured?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('discount', models.IntegerField(default=0, verbose_name='Discount (%)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.category', verbose_name='Product Category')),
                ('gold_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.todaysrate', verbose_name="Today's Rate")),
            ],
        ),
        migrations.CreateModel(
            name='SilverProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Product Title')),
                ('slug', models.SlugField(max_length=160, verbose_name='Product Slug')),
                ('sku', models.CharField(max_length=255, unique=True, verbose_name='Unique Product ID (SKU)')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('silver_type', models.CharField(choices=[('sterling_silver', 'Sterling Silver'), ('pure_silver', 'Pure Silver')], max_length=150, verbose_name='Silver Type')),
                ('silver_ornament_type', models.CharField(choices=[('silver_anklets', 'Silver Anklets'), ('silver_bangles', 'Silver Bangles'), ('silver_bracelets', 'Silver Bracelets'), ('silver_chains', 'Silver Chains'), ('silver_necklaces', 'Silver Necklaces'), ('silver_lamps', 'Silver Lamps'), ('silver_vessels', 'Silver Vessels')], max_length=150, verbose_name='Silver Ornament Type')),
                ('karatage', models.CharField(blank=True, choices=[('N/A', 'N/A'), ('925', '925')], max_length=10, null=True, verbose_name='Karatage')),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Weight (in grams)')),
                ('making_charges', models.DecimalField(decimal_places=2, default=1200, max_digits=8, verbose_name='Making Charges / gram')),
                ('gst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='GST Amount')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Price')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Amount')),
                ('is_active', models.BooleanField(verbose_name='Is Active?')),
                ('is_featured', models.BooleanField(verbose_name='Is Featured?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('discount', models.IntegerField(default=0, verbose_name='Discount (%)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.category', verbose_name='Product Category')),
                ('gold_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.todaysrate', verbose_name="Today's Rate")),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images', verbose_name='Product Image')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Uploaded Date')),
                ('diamond_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='store.diamondproduct', verbose_name='Diamond Product')),
                ('gold_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='store.goldproduct', verbose_name='Gold Product')),
                ('silver_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='store.silverproduct', verbose_name='Silver Product')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('ordered_date', models.DateTimeField(auto_now_add=True, verbose_name='Ordered Date')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Packed', 'Packed'), ('On The Way', 'On The Way'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Pending', max_length=50)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.address', verbose_name='Shipping Address')),
                ('diamond_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.diamondproduct', verbose_name='Diamond Product')),
                ('gold_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.goldproduct', verbose_name='Gold Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('silver_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.silverproduct', verbose_name='Silver Product')),
            ],
        ),
        migrations.CreateModel(
            name='GiftProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(choices=[('gold', 'Gold'), ('silver', 'Silver')], max_length=10, verbose_name='Product Type')),
                ('title', models.CharField(max_length=150, verbose_name='Gift Title')),
                ('slug', models.SlugField(max_length=160, verbose_name='Gift Slug')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('image', models.ImageField(upload_to='gift_images/', verbose_name='Image')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Price')),
                ('is_active', models.BooleanField(verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('gold_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.goldproduct', verbose_name='Gold Product')),
                ('silver_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.silverproduct', verbose_name='Silver Product')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('diamond_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.diamondproduct', verbose_name='Diamond Product')),
                ('gold_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.goldproduct', verbose_name='Gold Product')),
                ('silver_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.silverproduct', verbose_name='Silver Product')),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diamond_products', models.ManyToManyField(blank=True, to='store.diamondproduct', verbose_name='Diamond Product')),
                ('gold_products', models.ManyToManyField(blank=True, to='store.goldproduct', verbose_name='Gold Product')),
                ('silver_products', models.ManyToManyField(blank=True, to='store.silverproduct', verbose_name='Silver Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
    ]
